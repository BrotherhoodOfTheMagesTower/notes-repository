<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aboutNotesRepository" xml:space="preserve">
    <value>About Notes Repository</value>
  </data>
  <data name="aboutNotesRepositoryDescryption" xml:space="preserve">
    <value>Web application which allows user to take notes and share them across all of their devices.
        The purpose of this application is to provide the user with a complex solution to take notes.
        App makes use of Markdown language which allows quick and effective text formatting as well as nesting html code inside of the note.</value>
  </data>
  <data name="add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="addEvent" xml:space="preserve">
    <value>Add Event</value>
  </data>
  <data name="addFolder" xml:space="preserve">
    <value>Add new folder</value>
  </data>
  <data name="addNote" xml:space="preserve">
    <value>Add note</value>
  </data>
  <data name="calendar" xml:space="preserve">
    <value>Calendar</value>
  </data>
  <data name="changeFolder" xml:space="preserve">
    <value>Change folder</value>
  </data>
  <data name="clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="collabEmail" xml:space="preserve">
    <value>Collaborator's e-mail</value>
  </data>
  <data name="collabNameSurname" xml:space="preserve">
    <value>Collaborator's name and surname</value>
  </data>
  <data name="congrats" xml:space="preserve">
    <value>Congrats!</value>
  </data>
  <data name="content" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="crossPlatform" xml:space="preserve">
    <value>Cross Platform</value>
  </data>
  <data name="crossPlatformDescryption" xml:space="preserve">
    <value>Application can be used on variety of devices ranging from
                small mobile phones to big TV screens.</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="deleteEvent" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="deleteFolder" xml:space="preserve">
    <value>Delete this folser</value>
  </data>
  <data name="deleteFolderPermanently" xml:space="preserve">
    <value>Delete Folder Permanently</value>
  </data>
  <data name="deleteNote" xml:space="preserve">
    <value>Delete note</value>
  </data>
  <data name="deleteNotePermanently" xml:space="preserve">
    <value>Delete Note Permanently</value>
  </data>
  <data name="directory" xml:space="preserve">
    <value>Directory</value>
  </data>
  <data name="directoryDoesntExist" xml:space="preserve">
    <value>Directory doesn't exist!</value>
  </data>
  <data name="directoryHasBeenDeleted" xml:space="preserve">
    <value>Directory has been deleted</value>
  </data>
  <data name="directoryNameUpdated" xml:space="preserve">
    <value>The directory name has been updated.</value>
  </data>
  <data name="directoryUpdated" xml:space="preserve">
    <value>Folder directory has been updated.</value>
  </data>
  <data name="dontNotes" xml:space="preserve">
    <value>You don't have any notes</value>
  </data>
  <data name="dontPinned" xml:space="preserve">
    <value>You don't have any notes pinned</value>
  </data>
  <data name="dontUpcomingEvents" xml:space="preserve">
    <value>You don't have any events anytime soon</value>
  </data>
  <data name="draft" xml:space="preserve">
    <value>Draft</value>
  </data>
  <data name="edit" xml:space="preserve">
    <value>Edit note</value>
  </data>
  <data name="editEvent" xml:space="preserve">
    <value>Edit Event</value>
  </data>
  <data name="editName" xml:space="preserve">
    <value>Edit name</value>
  </data>
  <data name="EditNoteMessageEmptyNote" xml:space="preserve">
    <value>Your note is empty.</value>
  </data>
  <data name="EditNoteMessageError" xml:space="preserve">
    <value>Something went wrong!</value>
  </data>
  <data name="EditNoteMessageImageDeleted" xml:space="preserve">
    <value>Image has been deleted.</value>
  </data>
  <data name="EditNoteMessageTooLargeSize" xml:space="preserve">
    <value>Image Size is to large! Max size is 4 MB.</value>
  </data>
  <data name="EditNoteMessageTooLongNote" xml:space="preserve">
    <value>Your note is too long.</value>
  </data>
  <data name="EditNoteMessageWhiteChars" xml:space="preserve">
    <value>Image name contains white characters!</value>
  </data>
  <data name="EditNoteMessageWrongFormat" xml:space="preserve">
    <value>A wrong file has been entered!</value>
  </data>
  <data name="End" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="endIsRequired" xml:space="preserve">
    <value>End is required.</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Error!</value>
  </data>
  <data name="errorDeletingDir" xml:space="preserve">
    <value>Error while deleting directory</value>
  </data>
  <data name="errorWhileCreatingFolder" xml:space="preserve">
    <value>An error occurred while creating the folder.</value>
  </data>
  <data name="errorWhileMoving" xml:space="preserve">
    <value>An error occurred while moving folder.</value>
  </data>
  <data name="errorWhileRenaming" xml:space="preserve">
    <value>An error occurred while changing name of directory.</value>
  </data>
  <data name="errorWhileSavingNote" xml:space="preserve">
    <value>An error occurred while saving note.</value>
  </data>
  <data name="eventPlanning" xml:space="preserve">
    <value>Event Planning</value>
  </data>
  <data name="eventPlanningDescryption" xml:space="preserve">
    <value>Do you tend to forget about incoming events? If so, don't
                worry. Notes Repository has got you covered and provides a complex calendar where you can add events and pin notes to them.</value>
  </data>
  <data name="folderCantBeDeleted" xml:space="preserve">
    <value>This folder can't be deleted!</value>
  </data>
  <data name="folderCreated" xml:space="preserve">
    <value>Folder has been created.</value>
  </data>
  <data name="folderExists" xml:space="preserve">
    <value>Folder already exists!</value>
  </data>
  <data name="folders" xml:space="preserve">
    <value>Folders</value>
  </data>
  <data name="folderStructure" xml:space="preserve">
    <value>Folder structure</value>
  </data>
  <data name="folderStructureDescryption" xml:space="preserve">
    <value>All notes are nested inside folders which can be nested inside each other.</value>
  </data>
  <data name="freeToUse" xml:space="preserve">
    <value>Free to use</value>
  </data>
  <data name="freeToUseDescryption" xml:space="preserve">
    <value>Our app is completely free to use!</value>
  </data>
  <data name="GoogleAuhentication" xml:space="preserve">
    <value>Google authentication</value>
  </data>
  <data name="GoogleAuhenticationDescryption" xml:space="preserve">
    <value>Registering has never been that easy! With Notes Repository you can register/ login with Google.</value>
  </data>
  <data name="GoToNote" xml:space="preserve">
    <value>Go to this note</value>
  </data>
  <data name="homePage" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="logIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="markdownDescryption" xml:space="preserve">
    <value>Experience the power of Markdown language. Write notes in a quick and an efficient way.</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="newNote" xml:space="preserve">
    <value>New note</value>
  </data>
  <data name="noSearchResults" xml:space="preserve">
    <value>Sorry, there weren't any search results.</value>
  </data>
  <data name="noSharedNotes" xml:space="preserve">
    <value>No shared notes!</value>
  </data>
  <data name="noteDeleted" xml:space="preserve">
    <value>Note has been deleted!</value>
  </data>
  <data name="noteTitle" xml:space="preserve">
    <value>Note title</value>
  </data>
  <data name="noteUpdated" xml:space="preserve">
    <value>The note has been updated.</value>
  </data>
  <data name="pageNotFound" xml:space="preserve">
    <value>Page not found!</value>
  </data>
  <data name="pageNotFoundDesc" xml:space="preserve">
    <value>We're sorry, the page you were looking for isn't found here. The link you followed may either be broken or no longer exists. Please try again.</value>
  </data>
  <data name="pinned" xml:space="preserve">
    <value>Pinned</value>
  </data>
  <data name="preveiw" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="reguster" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="renameFolder" xml:space="preserve">
    <value>Rename this folder</value>
  </data>
  <data name="restoreFolder" xml:space="preserve">
    <value>Restore folder</value>
  </data>
  <data name="restoreNote" xml:space="preserve">
    <value>Restore note</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="saveEvent" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="saveNote" xml:space="preserve">
    <value>Save note</value>
  </data>
  <data name="SaveNoteMessageNoSuchFolder" xml:space="preserve">
    <value>There is no such folder!</value>
  </data>
  <data name="SaveNoteMessageOverwritten" xml:space="preserve">
    <value>The note has been overwritten.</value>
  </data>
  <data name="SaveNoteMessageSaved" xml:space="preserve">
    <value>The note was saved.</value>
  </data>
  <data name="search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="searchByContentOrTitle" xml:space="preserve">
    <value>search by content or title</value>
  </data>
  <data name="setReminder" xml:space="preserve">
    <value>Set reminder</value>
  </data>
  <data name="shared" xml:space="preserve">
    <value>Shared</value>
  </data>
  <data name="shareNote" xml:space="preserve">
    <value>Share note</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="startIsRequired" xml:space="preserve">
    <value>Start is required.</value>
  </data>
  <data name="templates" xml:space="preserve">
    <value>Templates</value>
  </data>
  <data name="templatesDescryption" xml:space="preserve">
    <value>User is provided with a set of ready to use templates thanks to which they can create notes faster.</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="theBestItSoftware" xml:space="preserve">
    <value>The Best IT Software for creating notes</value>
  </data>
  <data name="theLatest" xml:space="preserve">
    <value>The latest</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="titleIsRequired" xml:space="preserve">
    <value>Title is required.</value>
  </data>
  <data name="toUpload" xml:space="preserve">
    <value>To upload a image, you must first save the note.</value>
  </data>
  <data name="trash" xml:space="preserve">
    <value>Trash</value>
  </data>
  <data name="upcomingEvents" xml:space="preserve">
    <value>Upcoming events</value>
  </data>
  <data name="userFriendlyUI" xml:space="preserve">
    <value>User friendly UI</value>
  </data>
  <data name="userFriendlyUIDescryption" xml:space="preserve">
    <value>Our intention was to create a simple yet effective to use UI to make you as productive as possible.</value>
  </data>
  <data name="view" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Week" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="welcomeToNotes" xml:space="preserve">
    <value>Welcome to Notes Repository</value>
  </data>
</root>