<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aboutNotesRepository" xml:space="preserve">
    <value>O Notes Repository</value>
  </data>
  <data name="aboutNotesRepositoryDescryption" xml:space="preserve">
    <value>Aplikacja webowa, która umożliwia tworzenie notatek i otwieranie ich na wszystkich rodzajach urządzeń. Celem aplikacji jest zapewnienie użytkownikowi kompleksowego sposobu tworzenia notatek. Notes Repository wykorzystuje moc Markdowna, który pozwala na szybkie i efektywne tworzenie notatek, a także na zagnieżdżanie html.</value>
  </data>
  <data name="addFolder" xml:space="preserve">
    <value>Dodaj nowy folder</value>
  </data>
  <data name="addNote" xml:space="preserve">
    <value>Dodaj notatkę</value>
  </data>
  <data name="calendar" xml:space="preserve">
    <value>Kalendarz</value>
  </data>
  <data name="changeFolder" xml:space="preserve">
    <value>Zmień folder</value>
  </data>
  <data name="clear" xml:space="preserve">
    <value>Wyczyść</value>
  </data>
  <data name="content" xml:space="preserve">
    <value>Treść</value>
  </data>
  <data name="crossPlatform" xml:space="preserve">
    <value>Wieloplatformowość</value>
  </data>
  <data name="crossPlatformDescryption" xml:space="preserve">
    <value>Aplikację można wykorzystywać na różnych urządzeniach, od małych telefonów po duże telewizory.</value>
  </data>
  <data name="deleteFolder" xml:space="preserve">
    <value>Usuń folder</value>
  </data>
  <data name="deleteNote" xml:space="preserve">
    <value>Usuń notatkę</value>
  </data>
  <data name="directory" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="dontNotes" xml:space="preserve">
    <value>Nie masz żadnych notatek</value>
  </data>
  <data name="dontPinned" xml:space="preserve">
    <value>Nie masz przypiętych notatek</value>
  </data>
  <data name="dontUpcomingEvents" xml:space="preserve">
    <value>Nie masz żadnych wydarzeń w najbliższym czasie</value>
  </data>
  <data name="draft" xml:space="preserve">
    <value>Brudnopis</value>
  </data>
  <data name="edit" xml:space="preserve">
    <value>Edytuj notatkę</value>
  </data>
  <data name="editName" xml:space="preserve">
    <value>Zmień nazwę</value>
  </data>
  <data name="eventPlanning" xml:space="preserve">
    <value>Planowanie wydarzeń</value>
  </data>
  <data name="eventPlanningDescryption" xml:space="preserve">
    <value>Czy zdarza Ci się zapominać o nadchodzących wydarzeniach? Jeśli tak, to Notes Repository jest właśnie dla Ciebie.</value>
  </data>
  <data name="features" xml:space="preserve">
    <value>funkcjonalność</value>
  </data>
  <data name="folders" xml:space="preserve">
    <value>Foldery</value>
  </data>
  <data name="folderStructure" xml:space="preserve">
    <value>Struktura folderów</value>
  </data>
  <data name="folderStructureDescryption" xml:space="preserve">
    <value>Wszytskie notatki znajdują się w folderach, a te z kolei mogą być zagnieżdżone w innych.</value>
  </data>
  <data name="freeToUse" xml:space="preserve">
    <value>Darmowy w użytkowaniu</value>
  </data>
  <data name="freeToUseDescryption" xml:space="preserve">
    <value>Nasza aplikacja jest w pełni darmowa!</value>
  </data>
  <data name="GoogleAuhentication" xml:space="preserve">
    <value>Autoryzacja z Google</value>
  </data>
  <data name="GoogleAuhenticationDescryption" xml:space="preserve">
    <value>Rejestracja/logowanie nigdy nie były tak proste! Z Notes Repository możesz zarejestrować/zalogować się za pomocą Google.</value>
  </data>
  <data name="homePage" xml:space="preserve">
    <value>Strona główna</value>
  </data>
  <data name="logIn" xml:space="preserve">
    <value>Zaloguj się</value>
  </data>
  <data name="markdownDescryption" xml:space="preserve">
    <value>Doświadcz potęgę Markdowna! Pisz notatki szybko i wygodnie.</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Nazwa</value>
  </data>
  <data name="newNote" xml:space="preserve">
    <value>Nowa notatka</value>
  </data>
  <data name="noSharedNotes" xml:space="preserve">
    <value>Brak udostępnionych notatek!</value>
  </data>
  <data name="pinned" xml:space="preserve">
    <value>Przypiete</value>
  </data>
  <data name="pinNote" xml:space="preserve">
    <value>przypnij</value>
  </data>
  <data name="preview" xml:space="preserve">
    <value>Podgląd</value>
  </data>
  <data name="register" xml:space="preserve">
    <value>Zarejestruj się</value>
  </data>
  <data name="renameFolder" xml:space="preserve">
    <value>Zmień nazwę</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Zapisz</value>
  </data>
  <data name="saveNote" xml:space="preserve">
    <value>Zapisz notatkę</value>
  </data>
  <data name="search" xml:space="preserve">
    <value>Szukaj</value>
  </data>
  <data name="shared" xml:space="preserve">
    <value>Udostępnione</value>
  </data>
  <data name="shareNote" xml:space="preserve">
    <value>Udostępnij notatkę</value>
  </data>
  <data name="templates" xml:space="preserve">
    <value>Szablony</value>
  </data>
  <data name="templatesDescryption" xml:space="preserve">
    <value>Dla użytkownika dostępnych jest wiele gotowych do użycia szablonów, które skracają czas tworzenia notatki.</value>
  </data>
  <data name="theBestItSoftware" xml:space="preserve">
    <value>Najlepszym narzędziu do tworzenia notatek</value>
  </data>
  <data name="theLatest" xml:space="preserve">
    <value>Ostatnie</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Tytuł</value>
  </data>
  <data name="toUpload" xml:space="preserve">
    <value>Aby wysłać zdjęcie, musisz najpierw zapisać notatkę.</value>
  </data>
  <data name="trash" xml:space="preserve">
    <value>Kosz</value>
  </data>
  <data name="unPinNote" xml:space="preserve">
    <value>odepnij</value>
  </data>
  <data name="upcomingEvents" xml:space="preserve">
    <value>Nadchodzące wydarzenia</value>
  </data>
  <data name="userFriendlyUI" xml:space="preserve">
    <value>Przyjazny dla użytkownika UI</value>
  </data>
  <data name="userFriendlyUIDescryption" xml:space="preserve">
    <value>Naszym celem było utworzenie prostego, lecz wygodnego w obsłudzę UI.</value>
  </data>
  <data name="view" xml:space="preserve">
    <value>Widok</value>
  </data>
  <data name="welcomeToNotes" xml:space="preserve">
    <value>Witaj w Notes Repository!</value>
  </data>
</root>