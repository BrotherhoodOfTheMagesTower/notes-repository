@page "/selectTemplate"

@using Markdig
@using NotesRepository.Data.Models
@using NotesRepository.Repositories
@using NotesRepository.Services
@using Data.Constants
@using System.Security.Claims

@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor
@inject Microsoft.Extensions.Localization.IStringLocalizer<Resource> localizer
@inject NavigationManager navigationManager

<PageTitle>@title</PageTitle>
<HeadContent>
    <meta name="description" content="@description">
</HeadContent>

@if (previewKey is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="my-container">
        <div class="my-sub-container p-2 ">
            <center><h3>@localizer["templates"]</h3> </center>
            <ul>
                @foreach(KeyValuePair<string, string> kvp in Templates.NotesTemplates)
                {
                    <li>
                        <button type="button" class="btn btn-primary" @onclick="() => changePreview(kvp.Key)">@kvp.Key</button>
                    </li>
                }
            </ul>
        </div>
        <div class="my-sub-container p-2">
             <center><h3>@localizer["preview"]</h3></center>
            <div class="my-preview">
                @((MarkupString)Markdown.ToHtml(Templates.NotesTemplates[previewKey], pipeline))
            </div>
            <center>
                <button type="button" class="btn btn-primary" @onclick="changePageToEditNote">@localizer["edit"]</button>
            </center>
        </div>
    </div>
}

@code
{
    private string? previewKey = null;
    private MarkdownPipeline? pipeline;

    private string description = "Loading...";
    private string title = "Loading...";

    protected override async Task OnParametersSetAsync()
    {
        title = localizer["templates"];
        description = localizer["templatesDescryption"];
        previewKey = init();
        pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().Build(); // Uruchomienie rozszerzeń markdown
    }

    private void changePreview(string key) => previewKey = key;

    private string init() => Templates.NotesTemplates.Count > 0 ? Templates.NotesTemplates.Keys.First() : null;

    private void changePageToEditNote() => navigationManager.NavigateTo($"/editNote/{previewKey}");
}